<aetgt:getResponse xmlns:aetgt="http://schemas.active-endpoints.com/appmodules/repository/2010/10/avrepository.xsd"
                   xmlns:types1="http://schemas.active-endpoints.com/appmodules/repository/2010/10/avrepository.xsd">
   <types1:Item>
      <types1:EntryId>SK0CYybdsMkdypK-gt-11541-2021-04-23T06:23:45.725Z::pd.xml</types1:EntryId>
      <types1:Name>ProcessComplexXquery-2</types1:Name>
      <types1:MimeType>application/xml+process</types1:MimeType>
      <types1:Description/>
      <types1:AppliesTo/>
      <types1:Tags>.anonymous</types1:Tags>
      <types1:VersionLabel>1.0</types1:VersionLabel>
      <types1:State>CURRENT</types1:State>
      <types1:ProcessGroup/>
      <types1:CreatedBy>pramod</types1:CreatedBy>
      <types1:CreationDate>2021-04-23T06:23:46Z</types1:CreationDate>
      <types1:ModifiedBy/>
      <types1:PublicationStatus>unpublished</types1:PublicationStatus>
      <types1:AutosaveExists>false</types1:AutosaveExists>
      <types1:Entry>
         <process xmlns="http://schemas.active-endpoints.com/appmodules/screenflow/2010/10/avosScreenflow.xsd"
                  xmlns:list="urn:activevos:spi:list:functions"
                  displayName="ProcessComplexXquery-2"
                  name="ProcessComplexXquery-2"
                  overrideAPIName="false">
            <appliesTo/>
            <description/>
            <tags>.anonymous</tags>
            <generator>Informatica Process Designer 11</generator>
            <input>
               <parameter description="" name="i_APP" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </parameter>
               <parameter description="" name="i_MU" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </parameter>
               <parameter description="" name="i_LANGUAGE" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </parameter>
            </input>
            <output>
               <field description="" name="output" type="reference">
                  <options>
                     <option name="referenceTo">$po:$any</option>
                     <option name="required">false</option>
                     <option name="isCopy">true</option>
                  </options>
               </field>
               <field description="" name="o_count" type="int">
                  <options>
                     <option name="required">false</option>
                  </options>
               </field>
               <field description="" name="Error" type="reference">
                  <options>
                     <option name="referenceTo">$po:$any</option>
                     <option name="required">false</option>
                     <option name="isCopy">true</option>
                  </options>
               </field>
            </output>
            <tempFields>
               <field description="" name="prsTitle" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </field>
               <field description="" name="t_app" type="string">
                  <options>
                     <option name="required">false</option>
                  </options>
               </field>
            </tempFields>
            <notes/>
            <deployment suspendOnFault="false" tracingLevel="none">
               <rest>
                  <allowAnonymousAccess/>
               </rest>
            </deployment>
            <flow id="a">
               <start id="b">
                  <link id="kntwoome" targetId="kntwoomd"/>
               </start>
               <assignment id="kntwoomd">
                  <title>Assignment to i_LANGUAGE, i_MU</title>
                  <operation source="constant" to="input.i_LANGUAGE">Hindi</operation>
                  <operation source="constant" to="input.i_MU">Pramod</operation>
                  <link id="kntwoomf" targetId="kntwoom5"/>
               </assignment>
               <assignment id="kntwoom5">
                  <title>Process Title</title>
                  <operation source="formula" to="temp.prsTitle">
                     <expression language="XQuery">ipd:setProcessTitle(concat('kuchLoadMatKaro_Data^',$input.i_LANGUAGE ,'^',$input.i_MU))</expression>
                  </operation>
                  <operation source="formula" to="temp.t_app">
                     <expression language="XQuery">if(fn:empty($input.i_APP )) then 'VIP' else $input.i_APP</expression>
                  </operation>
                  <link id="kntwoomp" targetId="kntwoomo"/>
               </assignment>
               <assignment id="kntwooqf">
                  <title>Assignment to o_count</title>
                  <operation source="formula" to="output.o_count">
                     <expression language="XQuery">let $doc := document { $output.output  }/root/Export[1] return count($doc/ET_LIBCATEGORY[1]/TTYPE_ZWO_TT_EBS_LIBCATEGORY) + count($doc/ET_LIBBUDGET[1]/TTYPE_ZWO_TT_EBS_LIBBUDGET) + count($doc/ET_LIBCOSTELEMENT[1]/TTYPE_ZWO_TT_EBS_LIBCOSTELEMENT) + count($doc/ET_LIBCATEGORYCOSTELEMENT[1]/TTYPE_ZWO_TT_EBS_LIBCATEGORYCOSTELEM) + count($doc/ET_LIBSUBCATEGORY[1]/TTYPE_ZWO_TT_EBS_LIBSUBCATEGORY) + count($doc/ET_LIBSUBCONTRACTING[1]/TTYPE_ZWO_TT_EBS_LIBSUBCONTRACTING) + count($doc/ET_LIBMATERIAL[1]/TTYPE_ZWO_TT_EBS_LIBMATERIAL) + count($doc/ET_LIBRENTAL[1]/TTYPE_ZWO_TT_EBS_LIBRENTAL) + count($doc/ET_LIBMEAN[1]/TTYPE_ZWO_TT_EBS_LIBMEAN) + count($doc/ET_LIBRATEMEAN[1]/TTYPE_ZWO_TT_EBS_LIBRATEMEAN) + count($doc/ET_LIBMEANGROUP[1]/TTYPE_ZWO_TT_EBS_LIBMEANGROUP) + count($doc/ET_LIBMEANGROUPITEM[1]/TTYPE_ZWO_TT_EBS_LIBMEANGROUPITEM)
</expression>
                  </operation>
                  <link id="kntwoorf" targetId="kntwoore"/>
               </assignment>
               <container id="kntwoomo" type="exclusive">
                  <title>i_MU</title>
                  <flow id="kntwooms">
                     <link id="kntwoomt" targetId="kntwoomo" type="containerLink"/>
                  </flow>
                  <flow id="kntwoomv">
                     <link id="kntwoomw" targetId="kntwoomo" type="containerLink"/>
                  </flow>
                  <link id="kntwoomr" targetId="kntwooms" type="containerLink">
                     <condition source="formula">
                        <function name="contains">
                           <arg name="left">{$input.i_MU}</arg>
                           <arg name="right">Set</arg>
                        </function>
                     </condition>
                  </link>
                  <link id="kntwoopf" targetId="kntwoope"/>
                  <link id="kntwoomu" targetId="kntwoomv" type="containerLink"/>
               </container>
               <container id="kntwoope" type="parallel">
                  <title>Parallel Paths 1</title>
                  <flow id="kntwoopi">
                     <assignment id="kntwoops">
                        <title>Assignment to output</title>
                        <operation source="formula" to="output.output">
                           <expression language="XQuery">let $sysMsg := document { $temp.prsTitle  }/root/Export[1] return 
&lt;root
	xmlns:m="urn:informatica:ae:xquery:json2xml:meta-data"&gt;
	&lt;Response&gt; { let $items := $sysMsg/ET_LIBCATEGORY[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBCATEGORY[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBCATEGORY return 
		&lt;LibCategory m:isArray="true"&gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
		&lt;/LibCategory&gt; else 
		&lt;LibCategory m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBBUDGET[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBBUDGET[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBBUDGET return 
		&lt;Budget m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt; {if (fn:not(fn:empty($item/CODEBUDGET/text()))) then 
			&lt;CodeBudget&gt;{$item/CODEBUDGET/text()}&lt;/CodeBudget&gt; else() } 
			&lt;BudgetOrder&gt;{$item/BUDGETORDER/text()}&lt;/BudgetOrder&gt;
		&lt;/Budget&gt; else 
		&lt;Budget m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBCOSTELEMENT[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBCOSTELEMENT[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBCOSTELEMENT return 
		&lt;CostElement m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;CodeBudget&gt;{$item/CODEBUDGET/text()}&lt;/CodeBudget&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
		&lt;/CostElement&gt; else 
		&lt;CostElement m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBCATEGORYCOSTELEMENT[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBCATEGORYCOSTELEM[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBCATEGORYCOSTELEM return 
		&lt;LibCategoryCostElement m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;CodeLibCategory&gt;{$item/CODELIBCATEGORY/text()}&lt;/CodeLibCategory&gt;
			&lt;CodeCostElement&gt;{$item/CODECOSTELEMENT/text()}&lt;/CodeCostElement&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
		&lt;/LibCategoryCostElement&gt; else 
		&lt;LibCategoryCostElement m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBSUBCATEGORY[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBSUBCATEGORY[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBSUBCATEGORY return 
		&lt;LibSubCategory m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;CodeLibCategory&gt;{$item/CODELIBCATEGORY/text()}&lt;/CodeLibCategory&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
		&lt;/LibSubCategory&gt; else 
		&lt;LibSubCategory m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBSUBCONTRACTING[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBSUBCONTRACTING[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBSUBCONTRACTING return 
		&lt;LibSubContracting m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;CodeLibSubCategory&gt;{$item/CODELIBSUBCATEGORY/text()}&lt;/CodeLibSubCategory&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
			&lt;Unit&gt;{$item/UNIT/text()}&lt;/Unit&gt;
			&lt;Provider&gt;{$item/PROVIDER/text()}&lt;/Provider&gt;
			&lt;DescriptionProvider&gt;{$item/DESCRIPTIONPROVIDER/text()}&lt;/DescriptionProvider&gt;
			&lt;UnitPrice m:type="xs:double"&gt;{$item/UNITPRICE/text()}&lt;/UnitPrice&gt;
			&lt;IsTemp m:type="xs:boolean"&gt;{if ($item/ISTEMP/text() = "X") then "true" else "false"}&lt;/IsTemp&gt;
			&lt;PlanningElement &gt;&lt;/PlanningElement&gt;
		&lt;/LibSubContracting&gt; else 
		&lt;LibSubContracting m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBMATERIAL[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBMATERIAL[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBMATERIAL return 
		&lt;LibMaterial m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;CodeLibSubCategory&gt;{$item/CODELIBSUBCATEGORY/text()}&lt;/CodeLibSubCategory&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
			&lt;Unit&gt;{$item/UNIT/text()}&lt;/Unit&gt;
			&lt;Provider&gt;{$item/PROVIDER/text()}&lt;/Provider&gt;
			&lt;DescriptionProvider&gt;{$item/DESCRIPTIONPROVIDER/text()}&lt;/DescriptionProvider&gt;
			&lt;UnitPrice m:type="xs:double"&gt;{$item/UNITPRICE/text()}&lt;/UnitPrice&gt;
			&lt;IsTemp m:type="xs:boolean"&gt;{if ($item/ISTEMP/text() = "X") then "true" else "false"}&lt;/IsTemp&gt;
		&lt;/LibMaterial&gt; else 
		&lt;LibMaterial m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBRENTAL[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBRENTAL[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBRENTAL return 
		&lt;LibRental m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;CodeLibSubCategory&gt;{$item/CODELIBSUBCATEGORY/text()}&lt;/CodeLibSubCategory&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
			&lt;Unit&gt;{$item/UNIT/text()}&lt;/Unit&gt;
			&lt;Provider&gt;{$item/PROVIDER/text()}&lt;/Provider&gt;
			&lt;DescriptionProvider&gt;{$item/DESCRIPTIONPROVIDER/text()}&lt;/DescriptionProvider&gt;
			&lt;UnitPrice m:type="xs:double"&gt;{$item/UNITPRICE/text()}&lt;/UnitPrice&gt;
			&lt;IsTemp m:type="xs:boolean"&gt;{if ($item/ISTEMP/text() = "X") then "true" else "false"}&lt;/IsTemp&gt;
		&lt;/LibRental&gt; else 
		&lt;LibRental m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBMEAN[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBMEAN[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBMEAN return 
		&lt;LibMean m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;CodeLibCategory&gt;{$item/CODELIBCATEGORY/text()}&lt;/CodeLibCategory&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
			&lt;Unit&gt;{$item/UNIT/text()}&lt;/Unit&gt;
			&lt;IsTemp m:type="xs:boolean"&gt;{if ($item/ISTEMP/text() = "X") then "true" else "false"}&lt;/IsTemp&gt;
		&lt;/LibMean&gt; else 
		&lt;LibMean m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBRATEMEAN[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBRATEMEAN[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBRATEMEAN return 
		&lt;LibRateMean m:isArray="true" &gt;
			&lt;CodeLibCategoryCostElement&gt;{$item/CODELIBCATEGORYCOSTELEMENT/text()}&lt;/CodeLibCategoryCostElement&gt;
			&lt;CodeLibMean&gt;{$item/CODELIBMEAN/text()}&lt;/CodeLibMean&gt;
			&lt;Rate m:type="xs:double"&gt;{$item/RATE/text()}&lt;/Rate&gt;
		&lt;/LibRateMean&gt; else 
		&lt;LibRateMean m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBMEANGROUP[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBMEANGROUP[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBMEANGROUP return 
		&lt;LibMeanGroup m:isArray="true" &gt;
			&lt;Code&gt;{$item/CODE/text()}&lt;/Code&gt;
			&lt;Description&gt;{$item/DESCRIPTION/text()}&lt;/Description&gt;
			&lt;Unit&gt;{$item/UNIT/text()}&lt;/Unit&gt;
			&lt;IsTemp m:type="xs:boolean"&gt;{if ($item/ISTEMP/text() = "X") then "true" else "false"}&lt;/IsTemp&gt;
		&lt;/LibMeanGroup&gt; else 
		&lt;LibMeanGroup m:isNull="true"/&gt; } { let $items := $sysMsg/ET_LIBMEANGROUPITEM[1] return if (fn:exists($items/TTYPE_ZWO_TT_EBS_LIBMEANGROUPITEM[1]))then for $item in $items/TTYPE_ZWO_TT_EBS_LIBMEANGROUPITEM return 
		&lt;LibMeanGroupItem m:isArray="true"&gt;
			&lt;CodeLibMeanGroup&gt;{$item/CODELIBMEANGROUP/text()}&lt;/CodeLibMeanGroup&gt;
			&lt;CodeLibMean&gt;{$item/CODELIBMEAN/text()}&lt;/CodeLibMean&gt;
			&lt;Quantity m:type="xs:double"&gt;{$item/QUANTITY/text()}&lt;/Quantity&gt;
		&lt;/LibMeanGroupItem&gt; else 
		&lt;LibMeanGroupItem m:isNull="true"/&gt; } 
	&lt;/Response&gt;
	&lt;Error&gt; { let $code := $sysMsg/ET_RETURN[1]/TTYPE_ZWO_TT_EBS_RETURN[1]/ERROR_CODE return if (($code = 1) or ($code = 0)) then (
		&lt;Code m:type="xs:double"&gt;0&lt;/Code&gt;,
		&lt;Description&gt;Success&lt;/Description&gt;) else if ($code = 11) then (
		&lt;Code m:type="xs:double"&gt;500&lt;/Code&gt;,
		&lt;Description&gt;Technical issues&lt;/Description&gt;) else if ($code = 13) then (
		&lt;Code m:type="xs:double"&gt;700&lt;/Code&gt;,
		&lt;Description&gt;MU does not exist&lt;/Description&gt;) else if ($code = 14) then (
		&lt;Code m:type="xs:double"&gt;701&lt;/Code&gt;,
		&lt;Description&gt;Language is not recognized&lt;/Description&gt;) else () } 
	&lt;/Error&gt;
	&lt;Request&gt;
		&lt;MU&gt;{$input.i_MU }&lt;/MU&gt;
		&lt;Language&gt;{$input.i_LANGUAGE }&lt;/Language&gt;
	&lt;/Request&gt;
&lt;/root&gt;</expression>
                        </operation>
                     </assignment>
                     <link id="kntwoopj" targetId="kntwoope" type="containerLink"/>
                  </flow>
                  <flow id="kntwoopl">
                     <assignment id="kntwooq3">
                        <title>Assignment to Error</title>
                        <operation source="formula" to="output.Error">
                           <expression language="XQuery">&lt;root&gt;
	&lt;Error&gt;
		&lt;Code&gt;500&lt;/Code&gt;
		&lt;Description&gt;{ let $fault_error := $temp.prsTitle /reason /text() return 'Error - Technical issues - happened while connecting to S/4 - ' || util:getProcessId() || ' - ' }&lt;/Description&gt;
	&lt;/Error&gt;
	&lt;Request&gt;
		&lt;MU&gt;{$input.i_MU }&lt;/MU&gt;
		&lt;Language&gt;{$input.i_LANGUAGE }&lt;/Language&gt;
	&lt;/Request&gt;
&lt;/root&gt;
</expression>
                        </operation>
                     </assignment>
                     <link id="kntwoopm" targetId="kntwoope" type="containerLink"/>
                  </flow>
                  <link id="kntwooph" targetId="kntwoopi" type="containerLink"/>
                  <link id="kntwooqg" targetId="kntwooqf"/>
                  <link id="kntwoopk" targetId="kntwoopl" type="containerLink"/>
               </container>
               <container id="kntwoore" type="exclusive">
                  <title>i_LANGUAGE</title>
                  <flow id="kntwoori">
                     <assignment id="kntwoos9">
                        <title>Assignment to t_app</title>
                        <operation source="formula" to="temp.t_app">
                           <expression language="XQuery">util:toJSON($output.output/*)</expression>
                        </operation>
                     </assignment>
                     <link id="kntwoorj" targetId="kntwoore" type="containerLink"/>
                  </flow>
                  <flow id="kntwoorl">
                     <end id="kntwoou6">
                        <title>Milestone 1</title>
                        <operation source="formula" to="header.tApp">
                           <expression language="XQuery">util:toJSON($output.output/*)</expression>
                        </operation>
                     </end>
                  </flow>
                  <link id="kntwoorh" targetId="kntwoori" type="containerLink">
                     <condition source="formula">
                        <function name="contains">
                           <arg name="left">{$input.i_LANGUAGE}</arg>
                           <arg name="right">Hindi</arg>
                        </function>
                     </condition>
                  </link>
                  <link id="kntwootz" targetId="c"/>
                  <link id="kntwoork" targetId="kntwoorl" type="containerLink"/>
               </container>
               <end id="c"/>
            </flow>
         </process>
      </types1:Entry>
      <types1:GUID>aykf4hQz0HYd61oWTakPOH</types1:GUID>
      <types1:DisplayName>ProcessComplexXquery-2</types1:DisplayName>
   </types1:Item>
   <types1:CurrentServerDateTime>2021-06-17T07:32:10.979Z</types1:CurrentServerDateTime>
</aetgt:getResponse>
